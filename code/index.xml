<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codes on peng</title>
    <link>http://bsydl.github.io/code/</link>
    <description>Recent content in Codes on peng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 07 Nov 2019 00:17:33 +0800</lastBuildDate>
    
	<atom:link href="http://bsydl.github.io/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Git</title>
      <link>http://bsydl.github.io/code/git/</link>
      <pubDate>Thu, 07 Nov 2019 00:17:33 +0800</pubDate>
      
      <guid>http://bsydl.github.io/code/git/</guid>
      <description>Git 0、学习Git的原因  更好的管理代码： GitHub作为免费的分布式版本控制系统；每一次上传都会记录版本，有助于程序员恢复以前版本 更深一步的学习： GItHub上有很多优秀的开源项目值得我们学习 面试要求： 简历中经常需要附带个人GitHub地址，供面试官查看个人项目
1、git简介 github是linus继linnux之后第二大发明，秉着开源精神，和linux一样，Git同样免费。
Git是目前世界上最先进的分布式版本控制系统（没有之一）；
Linus人物传   很多人都知道，Linus在1991年创建了开源的Linux，从此，Linux系统不断发展，已经成为最大的服务器系统软件了。
Linus虽然创建了Linux，但Linux的壮大是靠全世界热心的志愿者参与的，这么多人在世界各地为Linux编写代码，那Linux的代码是如何管理的呢？
事实是，在2002年以前，世界各地的志愿者把源代码文件通过diff的方式发给Linus，然后由Linus本人通过手工方式合并代码！
你也许会想，为什么Linus不把Linux代码放到版本控制系统里呢？不是有CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。
不过，到了2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。
安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。
Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：
Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。
Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。
历史就是这么偶然，如果不是当年BitMover公司威胁Linux社区，可能现在我们就没有免费而超级好用的Git了
   2、github安装 Windows下的安装 直接在官网上去下载。下载完成后，随便在某个文件下右键如果有Git Bash Here就安装成功。安装后，还要在命令行输入如下命令
修改自己的用户名和邮箱地址：
$ git config &amp;ndash;global user.name &amp;ldquo;xxx&amp;rdquo;
$ git config &amp;ndash;global user.email &amp;ldquo;xxx&amp;rdquo;
查看自己的用户名和邮箱地址：
$ git config user.name
$ git config user.email
mac下的安装 首先查看电脑是否安装Git，终端输入：git; 如果没有安装，则通过homebrew安装Git、 - 1、未安装homebrew，需安装homebrew 终端输入命令
/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;   2、安装git</description>
    </item>
    
  </channel>
</rss>